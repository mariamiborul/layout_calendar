{"version":3,"sources":["styles/main.scss","styles/variables.scss"],"names":[],"mappings":"AAEA,EACE,sBAGF,KACE,QAAA,CACA,sCAAA,CAEA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAGF,UACE,YAAA,CACA,cAAA,CACA,OCnBU,CDoBV,YAGE,sCACA,cADA,sCACA,kBADA,sCACA,kBADA,sCACA,kBADA,sCACA,kBADA,sCACA,kBADA,sCACA,kBAME,gLACE,aAKN,eACE,YAAA,CACA,WAAA,CACA,qBAAA,CACA,qBAAA,CAEA,YAAA,CACA,sBAAA,CACA,mBAGE,kCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,mCACE,WAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAJF,oCACE,YAAA,CACA,UAAA,CACA,cAAA,CACA,kBAIJ,qBACE,wBAAA,CACA,cAAA,CACA,2BAAA,CACA","file":"main.179c5ccf.css","sourceRoot":"../src","sourcesContent":["@import './variables';\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, Helvetica, sans-serif;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.calendar {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $block-gap;\n  width: $calendar-width;\n\n  @each $day, $index in $days {\n    &--start-day-#{$day}>:first-child {\n    margin-left: $index * (100 + $block-gap);\n    }\n  }\n\n  @for $day from 28 through $max-month-length {\n    &--month-length-#{$day} {\n      & :nth-child(n + #{$day + 1}) {\n        display: none;\n      }\n    }\n  }\n\n  &__day {\n    height: 100px;\n    width: 100px;\n    border: 1px solid #000;\n    background-color: #eee;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @for $day-number from 1 through 31 {\n      &:nth-child(#{$day-number})::before {\n        content: '#{$day-number}';\n        color: #000;\n        font-size: 30px;\n        text-align: center;\n      }\n    }\n\n    &:hover {\n      background-color: #FFBFCB;\n      cursor: pointer;\n      transform: translate(0, -20px);\n      transition-duration: 0.5s;\n    }\n  }\n}\n\n\n\n\n\n\n\n","$block-gap: 1px;\n$days: mon 0, tue 1, wed 2, thu 3, fri 4, sat 5, sun 6;\n$max-month-length: 31;\n$day-width: 100px;\n$flex-gap: 1px;\n$calendar-width: calc($day-width * 7) + ($flex-gap * 6);\n\n\n\n"]}